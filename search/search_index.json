{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bonnes pratiques","text":""},{"location":"#preparation-du-projet","title":"\ud83d\udee0\ufe0f Pr\u00e9paration du projet","text":"<ul> <li> Cr\u00e9er le d\u00e9p\u00f4t GitHub</li> <li> Ajouter un fichier README.md</li> <li> Ajouter un <code>.gitignore</code></li> <li> D\u00e9finir un fichier <code>LICENSE</code></li> </ul>"},{"location":"#documentation","title":"\ud83d\udcc4 Documentation","text":"<ul> <li> Ajouter une page d\u2019accueil \u00e0 la doc</li> <li> Documenter l'architecture du projet</li> <li> Lister les d\u00e9pendances principales</li> </ul>"},{"location":"MkDocs/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"MkDocs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"MkDocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"MkDocs/#deployement-de-la-doc","title":"Deployement de la doc","text":"\u00c9tape \u00c0 faire 1 Installer MkDocs 2 Cr\u00e9er un dossier avec <code>mkdocs new</code> 3 Ajouter checklist en <code>.md</code> 4 Tester en local avec <code>serve</code> 5 D\u00e9ployer avec <code>gh-deploy</code> <p>NOte : Ctrl + C pour stop le serveur</p>"},{"location":"MkDocs/#site-accessible","title":"Site accessible","text":"<pre><code>https://TONUTILISATEUR.github.io/TONREPO/\n</code></pre>"},{"location":"securite/","title":"\u2705 Check-list S\u00e9curit\u00e9","text":""},{"location":"securite/#code-backend","title":"Code Backend","text":"<ul> <li> Utiliser des requ\u00eates pr\u00e9par\u00e9es (PDO, Doctrine, Eloquent, etc.)</li> <li> <p> Valider toutes les donn\u00e9es en entr\u00e9e</p> <ul> <li>Filtrer les caract\u00e8res ind\u00e9sitables</li> <li>V\u00e9rifier le format ( num\u00e9rique, chaine de caract\u00e8re, date ...)</li> <li>V\u00e9rifier eventuellement avec une expression r\u00e9guli\u00e8re ( email ...)</li> <li>V\u00e9rifier la longueur des donn\u00e9es</li> </ul> </li> <li> <p> Echapper toutes les donn\u00e9es en sortie ( HTML, JSON, ... ) au cas ou il y aurait du code mal vaillant dans votre base de donn\u00e9es.</p> </li> <li> <p> G\u00e9rer les erreurs sans les afficher</p> <ul> <li>Enregistrer des logs</li> <li>Afficher des messages utilisateurs neutres ( Ne pas d\u00e9voiler trop d'information )</li> </ul> </li> <li> <p> Impl\u00e9menter une authentification s\u00e9curis\u00e9e</p> <ul> <li>Hash avec bcrypt ou argon2</li> <li>Rate limiting (bruteforce)</li> <li>Jetons CSRF pour les formulaires (prevu par les framework)</li> </ul> </li> <li> <p> G\u00e9rer les r\u00f4les et permissions (RBAC)</p> </li> <li> Journaliser les actions sensibles (connexion, modification de donn\u00e9es, etc.)</li> <li> Utiliser un analyseur de code statique PHPStan (niveau 5 minimum ) </li> </ul>"},{"location":"securite/#frontend","title":"Frontend","text":"<ul> <li> <p> Valider les formulaires c\u00f4t\u00e9 client (feedback imm\u00e9diat, economie de requete serveur)</p> </li> <li> <p> Ne jamais faire confiance aux donn\u00e9es entr\u00e9es par l'utilisateur</p> </li> <li> <p> Emp\u00eacher l'insersion de HTML brut dans une page \u00e0 partir d'une variable (attaque XSS)</p> </li> </ul> <p>Si c'est vraiment n\u00e9c\u00e9ssaire (Exemple l'utilisateur doit ecrire du texte avec des balises de code) Il faut nettoyer le HTML avant de l'afficher.   Eventuellement utiliser DOMpurify, accessible par npm ou CDN.</p> <ul> <li> Utiliser npm audit pour d\u00e9tecter les d\u00e9pendances vuln\u00e9rables</li> <li> \u00c9viter le stockage de donn\u00e9es sensibles dans le localStorage/sessionStorage</li> </ul>"},{"location":"securite/#base-de-donnees","title":"Base de donn\u00e9es","text":"<ul> <li> Utiliser un utilisateur MySQL avec droits limit\u00e9s</li> <li> D\u00e9finir des contraintes d\u2019int\u00e9grit\u00e9 (cl\u00e9 \u00e9trang\u00e8re, NOT NULL, UNIQUE\u2026)</li> </ul> <p>Attention !</p> <p>Ne pas rendre un champs nullable parce que c'est plus simple \u00e0 coder</p> <ul> <li> Ajouter des triggers pour prot\u00e9ger les donn\u00e9es sensibles ou historiques</li> <li> Mettre en place des sauvegardes r\u00e9guli\u00e8res</li> <li> Limiter les acces avec GANTT si possible</li> <li> Conserver toutdes historique, rien n'est vraiment effacer mais tout est archiver.</li> </ul>"}]}